NAMES

mushin
mizu
mind like water
miliwa
mlw

COMMANDS

from yagtd:
 - general
   - lists
     - contexts
     - deadlines
     - la/listall
     - list/ls
     - listpri/sort
     - listref/lr
     - order
     - overdue
     - search
     - searchall
     - status/summary
   - manipulate
     - add
     - archive (archives completed tasks)
     - load
     - print (outputs .rst file)
     - save

 - on a task (id as first arg)
   - flags
     - waitingfor
     - maybe/someday
   - set properties
     - complete
     - due # date (wrong in yagtd help, # is missing)
     - end # date (same bug)
     - importance
     - recurrence
     - start (same bug) 
     - time
     - urgency
   - manipulate
     - append
     - modify (diff with append not clear)
     - close/done
     - del/rm
     - edit
     - extend/notes (adds to title, not description)
     - ref
   - replace/sub
   - show

 
INSTALL

couchdb part:

couchapp push couchdb mushin http://thomas:pass@localhost:5984/mushin/

(with newer couchapp)

couchapp push --docid _design/mushin couchdb http://localhost:5984/mushin/


QUESTIONS

 - where to store .js code that you want to use both server-side and
   client-side ? For example, date.js and its setRFC3339 function.
   e.g. http://localhost:5984/mushin/_design/mushin/jquery.mushin.js
   is stored at couchdb/_attachments/jquery.mushin.js
   e.g. http://localhost:5984/mushin/_design/mushin/vendor/couchapp/jquery.couchapp.js
   is stored at couchdb/vendor/couchapp/_attachments/jquery.couchapp.js
   For now, we created a symlink
   
maemo
=====

program flow
------------
bin/mushin-maemo
  calls mushin.maemo.main.main
    creates mushin.maemo.start.StartWindow()
      uses mushin.common.app.Server object

error handling
--------------
- queryView can get a 404 errback; how to handle this ?
